<?xml version="1.0" encoding="UTF-8"?>
    
<project name="Blimp" default="all">
    <!-- xmlns:cpp="antlib:net.sf.antcontrib.cpptasks"> -->
    <!-- Cpptasks for <cc> targets -->
    <taskdef resource="cpptasks.tasks"/>
    <typedef resource="cpptasks.types"/>


    <property name="src" location="src"/>
    <property name="build" location="build"/>
    <property environment="env"/>
    
    <!-- <property name="build.compiler" value="jikes"/> -->

    <!-- SWT GUI framework -->
    <!-- <property name="swt.dir" location="swt-M20060629-1905-win32-win32-x86"/> -->
    <condition property="swt.dir" value="swt-M20060629-1905-win32-win32-x86">
      <os family="windows"/>
    </condition>
    <condition property="swt.jni.dir" value="${swt.dir}">
      <os family="windows"/>
    </condition>
    <condition property="swt.libs.dynamic" value="swt*.dll">
      <os family="windows"/>
    </condition>

    <condition property="swt.dir" value="/usr/lib/java">
      <os family="unix"/>
    </condition>
    <condition property="swt.jni.dir" value="/usr/lib/jni">
      <os family="unix"/>
    </condition>
    <condition property="swt.libs.dynamic" value="libswt*.so">
      <os family="unix"/>
    </condition>


    <property name="swt.jar" location="${swt.dir}/swt.jar"/>
    <property name="swt.nativelib.jar" location="${build}/swt-lib.jar"/>

    <!-- JUnit testing -->
    <property name="junit.dir" location="junit4.1"/>
    <property name="junit.jar" location="${junit.dir}/junit-4.1.jar"/>
    <!-- <property name="ant-junit.jar" location="${ANT_HOME}/lib/ant-junit.jar"/> -->

    <!-- Image processing library -->
    <property name="jiu.dir" location="jiu"/>
    <property name="jiu.jar" location="${jiu.dir}/jiu.jar"/>

    <!-- Xerces XML libraries -->
    <property name="xerces.jar" location="jars/xercesImpl.jar"/>
    
    <!-- Browser Launcher library -->
    <property name="browser.jar" location="jars/BrowserLauncher2-10rc4.jar"/>
    
    <!-- dcraw executable -->
    <condition property="dcraw.exe" value="blimp-dcraw.exe" else="dcraw">
        <os family="windows"/>
    </condition>
    
    <property name="dcraw.exe.path" location="${build}/${dcraw.exe}"/>

    <!-- LCMS variables -->
    <property name="lcms.base" location="lcms-1.16"/>
    <property name="lcms.dir" location="${lcms.base}/src"/>
    <property name="lcms.include" location="${lcms.base}/include"/>
    <property name="lcms.lib" location="build/lcms"/>
    
    <!-- C compiler -->
    <property name="c-compiler" value="gcc"/>

    <path id="build.classpath">
        <pathelement location="${swt.jar}"/>
        <pathelement location="${jiu.jar}"/>
        <pathelement location="${junit.jar}"/>
        <pathelement location="${browser.jar}"/>
    </path>
    <path id="run.classpath">
        <pathelement location="${swt.jar}"/>
        <pathelement location="${jiu.jar}"/>
        <pathelement location="${build}"/>
        <pathelement location="${xerces.jar}"/>
        <pathelement location="${browser.jar}"/>
    </path>
    <path id="test.classpath">
        <pathelement location="${junit.jar}"/>
        <pathelement location="${build}"/>
        <pathelement location="${xerces.jar}"/>
        <pathelement location="${jiu.jar}"/>
        <pathelement location="${browser.jar}"/>
    </path>
    
    <target name="init">
        <mkdir dir="${build}"/>
    </target>
    
    <target name="compile" depends="init">
        <javac srcdir="${src}" destdir="${build}" source="1.5" debug="on">
            <classpath refid="build.classpath"/>
        </javac>
    </target>
    
    <target name="lcms" depends="init">
        <cc outfile="${lcms.lib}" outtype="static" optimize="speed">
            <compiler name="${c-compiler}"/>
            <includepath location="${lcms.include}"/>
            <fileset dir="${lcms.dir}" includes="*.c"/>
        </cc>
    </target>
    
    <target name="dcraw" depends="lcms,init">
        <cc outfile="${dcraw.exe.path}" outtype="executable" optimize="extreme">
            <compiler name="${c-compiler}"/>
            <includepath location="${lcms.include}"/>
            <defineset define="NO_JPEG"/>
            <fileset dir="dcraw" includes="dcraw.c"/>
            <libset dir="build" libs="lcms,m"/>
        </cc>
    </target>
    
    <target name="blimp-jar" depends="compile,dcraw">
        <jar destfile="${build}/blimp.jar">
            <fileset dir="${build}" includes="**/*.class,${dcraw.exe}"/>
        </jar>
    </target>
    
    <target name="swt-native-jar" depends="init">
        <jar destfile="${swt.nativelib.jar}">
            <fileset dir="${swt.jni.dir}" includes="${swt.libs.dynamic}"/>
        </jar>
    </target>
    
    <!-- target for copying distribution jars (to be signed) -->
    <target name="copyjars">
        <copy todir="${build}">
            <fileset dir="jars" includes="*.jar"/>
        </copy>
        <copy todir="${build}" file="${jiu.jar}"/>
        <copy todir="${build}" file="${swt.jar}"/>
    </target>
    
    <target name="test-sign-environment">
        <fail unless="env.BLIMP_STOREPASS">BLIMP_STOREPASS environment variable not set.</fail>
    </target>
    
    <target name="signjars" depends="test-sign-environment,blimp-jar,swt-native-jar,copyjars">
        <!-- The store password must be set as an environment variable. -->
        <signjar alias="blimp" storepass="${env.BLIMP_STOREPASS}">
            <fileset dir="${build}" includes="*.jar"/>
        </signjar>
    </target>
    
    <target name="run" depends="compile,dcraw">
        <java fork="true"
              classname="org.boblycat.blimp.gui.swt.MainWindow">
            <classpath refid="run.classpath"/>
            <!-- <jvmarg value="-server"/> -->
            <jvmarg value="-Xmx256M"/>
            <sysproperty key="java.library.path" path="${swt.jni.dir}"/>
            <sysproperty key="blimp.dcraw.path" path="${dcraw.exe.path}"/>
        </java>
    </target>
    
    <target name="tests" depends="compile">
        <!-- could not get the junit task to work, so use a java task instead
        <junit printsummary="yes" fork="yes">
            <classpath refid="run.classpath"/>
            <formatter type="plain"/>
            <test name="org.boblycat.tests.SimpleTest"/>
        </junit>
        -->
        <!-- fork="yes" in order to get shorter stack traces on failures -->
        <java classname="org.boblycat.blimp.tests.RunTests" fork="yes">
            <classpath refid="test.classpath"/>
        </java>
    </target>
    
    <target name="clean">
        <delete dir="${build}"/>
    </target>
    
    <target name="rebuild" depends="clean,all"/>
    
    <target name="all" depends="compile,dcraw,tests"/>
</project>
