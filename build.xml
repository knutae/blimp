<?xml version="1.0" encoding="UTF-8"?>
    
<project name="Blimp" default="all">
    <!-- xmlns:cpp="antlib:net.sf.antcontrib.cpptasks"> -->
    <!-- Cpptasks for <cc> targets -->

    <taskdef resource="cpptasks.tasks"/>
    <typedef resource="cpptasks.types"/>

    <!-- Most properties are loaded from properties.* files -->
    <condition property="os.property.file" value="properties.windows">
        <os family="windows"/>
    </condition>
    
    <condition property="os.property.file" value="properties.unix">
        <os family="unix"/>
    </condition>
    
    <!-- Properties first set "win", so defaults are loaded last -->
    <property file="${os.property.file}"/>
    <property file="properties.default"/>
    
    <property environment="env"/>

    <!-- Classpaths -->    
    <path id="build.classpath">
        <pathelement location="${swt.jar}"/>
        <pathelement location="${jiu.jar}"/>
        <pathelement location="${junit.jar}"/>
        <pathelement location="${browser.jar}"/>
    </path>
    <path id="run.classpath">
        <pathelement location="${swt.jar}"/>
        <pathelement location="${jiu.jar}"/>
        <pathelement location="${build}"/>
        <pathelement location="${xerces.jar}"/>
        <pathelement location="${browser.jar}"/>
    </path>
    <path id="test.classpath">
        <pathelement location="${junit.jar}"/>
        <pathelement location="${build}"/>
        <pathelement location="${xerces.jar}"/>
        <pathelement location="${jiu.jar}"/>
        <pathelement location="${browser.jar}"/>
    </path>
    
    <target name="init">
        <mkdir dir="${build}"/>
    </target>
    
    <target name="compile-java" depends="init">
        <javac srcdir="${src}" destdir="${build}" source="1.5" debug="on">
            <classpath refid="build.classpath"/>
        </javac>
    </target>

    <target name="compile" depends="compile-java,dcraw"/>
    
    <target name="lcms" depends="init">
        <cc outfile="${lcms.lib}" outtype="static" optimize="speed">
            <compiler name="${c-compiler}"/>
            <includepath location="${lcms.include}"/>
            <fileset dir="${lcms.dir}" includes="*.c"/>
        </cc>
    </target>
    
    <target name="dcraw-with-lcms" depends="lcms,init">
        <cc outfile="${dcraw.exe.path}" outtype="executable" optimize="extreme">
            <compiler name="${c-compiler}"/>
            <includepath location="${lcms.include}"/>
            <defineset define="NO_JPEG"/>
            <fileset dir="dcraw" includes="dcraw.c"/>
            <libset dir="build" libs="lcms,m"/>
        </cc>
    </target>
    
    <target name="dcraw-minimal" depends="init">
        <cc name="${c-compiler}" outfile="${dcraw.exe.path}" outtype="executable" optimize="extreme">
            <compilerarg value="${c-compiler-args}"/>
            <linkerarg value="${c-linker-args}"/>
            <defineset define="${dcraw.defines.minimal}"/>
            <fileset dir="dcraw" includes="dcraw.c"/>
            <libset libs="${dcraw.libs.minimal}"/>
        </cc>
    </target>

    <target name="dcraw" depends="dcraw-minimal"/>
    
    <target name="blimp-jar-webstart" depends="compile">
        <jar destfile="${blimp.jar}">
            <fileset dir="${build}" includes="**/*.class,${dcraw.exe}"/>
        </jar>
    </target>
    
    <target name="blimp-jar" depends="compile-java">
        <jar destfile="${blimp.jar}">
            <fileset dir="${build}" includes="**/*.class"/>
        </jar>
    </target>
    
    <target name="swt-native-jar" depends="init">
        <jar destfile="${swt.nativelib.jar}">
            <fileset dir="${swt.jni.dir}" includes="${swt.libs.dynamic}"/>
        </jar>
    </target>
    
    <!-- target for copying distribution jars (to be signed) -->
    <target name="copyjars">
        <copy todir="${build}">
            <fileset dir="jars" includes="*.jar"/>
        </copy>
        <copy todir="${build}" file="${jiu.jar}"/>
        <copy todir="${build}" file="${swt.jar}"/>
    </target>
    
    <target name="test-sign-environment">
        <fail unless="env.BLIMP_STOREPASS">BLIMP_STOREPASS environment variable not set.</fail>
    </target>
    
    <target name="signjars" depends="test-sign-environment,blimp-jar-webstart,swt-native-jar,copyjars">
        <!-- The store password must be set as an environment variable. -->
        <signjar alias="blimp" storepass="${env.BLIMP_STOREPASS}">
            <fileset dir="${build}" includes="*.jar"/>
        </signjar>
    </target>
    
    <target name="run" depends="compile">
        <java fork="true"
              classname="org.boblycat.blimp.gui.swt.MainWindow">
            <classpath refid="run.classpath"/>
            <!-- <jvmarg value="-server"/> -->
            <jvmarg value="-Xmx256M"/>
            <sysproperty key="java.library.path" path="${swt.jni.dir}"/>
            <sysproperty key="blimp.dcraw.path" path="${dcraw.exe.path}"/>
        </java>
    </target>
    
    <target name="tests" depends="compile-java">
        <!-- could not get the junit task to work, so use a java task instead
        <junit printsummary="yes" fork="yes">
            <classpath refid="run.classpath"/>
            <formatter type="plain"/>
            <test name="org.boblycat.tests.SimpleTest"/>
        </junit>
        -->
        <!-- fork="yes" in order to get shorter stack traces on failures -->
        <java classname="org.boblycat.blimp.tests.RunTests" fork="yes">
            <classpath refid="test.classpath"/>
        </java>
    </target>
    
    <target name="clean">
        <delete dir="${build}"/>
    </target>
    
    <target name="rebuild" depends="clean,all"/>

    <target name="install-dcraw" depends="dcraw">
        <copy file="${dcraw.exe.path}" todir="${dcraw.install.bin}"/>
        <chmod file="${dcraw.install.bin}/${dcraw.exe}" perm="a+x"/>
    </target>

    <target name="install-jars" depends="blimp-jar">
        <copy todir="${install.lib}">
            <fileset dir="jars" includes="*.jar"/>
        </copy>
        <copy todir="${install.lib}" file="${jiu.jar}"/>
        <copy todir="${install.lib}" file="${blimp.jar}"/>
    </target>

    <target name="install-launcher" depends="install-jars">
        <path id="install.jars">
            <fileset dir="${install.lib}" includes="*.jar"/>
            <pathelement location="${swt.jar}"/>
        </path>
        <property name="install.classpath" refid="install.jars"/>
        <copy file="blimp-launcher.template" tofile="${install.bin}/blimp">
            <filterchain>
              <expandproperties/>
            </filterchain>
        </copy>
        <chmod dir="${install.bin}" perm="a+x" includes="*"/>
    </target>

    <target name="install-man">
        <mkdir dir="${install.man}"/>
        <gzip src="blimp.1" destfile="${install.man}/blimp.1.gz"/>
    </target>

    <target name="install-blimp" depends="install-jars,install-launcher"/>

    <target name="install" depends="install-blimp,install-dcraw"/>
    
    <target name="install-windows" depends="copyjars,install-dcraw">
        <copy todir="${install.lib}">
            <fileset dir="${build}" includes="*.jar"/>
        </copy>
        <copy todir="${install.bin}">
            <fileset dir="${swt.jni.dir}" includes="*.dll"/>
        </copy>
    </target>

    <target name="uninstall">
        <!-- Wipes out all of ${install.home}, so make sure it is set correctly. -->
        <delete dir="${install.home}"/>
	<delete file="${dcraw.install.bin}/${dcraw.exe}"/>
    </target>
    
    <target name="all" depends="compile,dcraw,tests"/>
</project>
